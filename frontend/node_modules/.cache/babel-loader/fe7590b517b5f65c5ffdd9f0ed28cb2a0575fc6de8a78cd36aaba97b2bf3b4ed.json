{"ast":null,"code":"var _jsxFileName = \"/Users/alexong/workspace/school/sdmay24-48/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./styles/App.css\";\nimport Header from \"./components/Header\";\nimport { ChakraProvider, Button, Spinner } from \"@chakra-ui/react\";\nimport InputFields from \"./components/InputFields\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [viewResult, setViewResult] = useState(false);\n  const [prediciton, setPrediction] = useState(\"\");\n  const [showSubmitError, setShowSubmitError] = useState(false);\n\n  // Form Data State\n  const [formData, setFormData] = useState({\n    skinConditions: []\n  });\n\n  // Callback function to pass into InputFields for Text Box changes\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Callback function to pass into InputFields for Checkboxes\n  const handleCheckboxChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    let updatedSkinConditions = [...formData.skinConditions];\n    if (checked) {\n      updatedSkinConditions.push(value);\n    } else {\n      updatedSkinConditions = updatedSkinConditions.filter(condition => condition !== value);\n    }\n    setFormData({\n      ...formData,\n      skinConditions: updatedSkinConditions\n    });\n  };\n  const handleSubmit = () => {\n    // Check if all text fields are filled out\n    const isTextFieldsFilled = Object.entires(formData).filter((value, key) => key !== 'skinConditions').every(value => typeof value === 'string' && value.trim() !== '');\n    // const t1 =  Object.entries(formData).filter((value, key) => key !== 'skinConditions')\n    // console.log(t1)\n    // const t2 = t1.every(value => typeof value === 'string' && value.trim() !== '');\n\n    // console.log(t1, t2)\n\n    // Check if at least one skin condition is selected\n    const isSkinConditionSelected = formData.skinConditions.length > 0;\n\n    // if (isTextFieldsFilled && isSkinConditionSelected) {\n    //   // Form is valid, proceed with submission\n    //   console.log('Form submitted:', formData);\n    //   return true\n    // }\n    //   // Form is invalid, show error message\n    //   console.log('Please fill out all text fields and select at least one skin condition.');\n    //   return false\n  };\n  const getPrediction = async () => {\n    const payload = {\n      ...formData\n    };\n    console.log('payload ', payload);\n    if (!handleSubmit()) {\n      setShowSubmitError(true);\n      return;\n    }\n    console.log('payload ', payload);\n    setIsLoading(true);\n    const res = await fetch(awsTestUrl, {\n      method: \"GET\"\n    }).then(response => response.json()).catch(error => console.error(error));\n    setIsLoading(false);\n    console.log(res);\n    if (res) {\n      setViewResult(true);\n      setPrediction(res.body);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"min-h-fit flex flex-col items-center justify-center \",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-60\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          size: \"xl\",\n          thickness: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), !isLoading && !viewResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex flex-col items-center\",\n          children: /*#__PURE__*/_jsxDEV(InputFields, {\n            handleInputChange: handleInputChange,\n            showSubmitError: showSubmitError,\n            handleCheckboxChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: getPrediction,\n            colorScheme: \"red\",\n            children: \"View Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !isLoading && viewResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-semibold text-black\",\n          children: \"Prediction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: prediciton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SL+FVEEXnqAtCQucx0fKwyPPZI0=\");\n_c = App;\nexport default App;\nconst awsTestUrl = \"https://lryw2w5i7nr5ysubsumkcn4ssu0fprbu.lambda-url.us-east-1.on.aws/\";\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","ChakraProvider","Button","Spinner","InputFields","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoading","setIsLoading","viewResult","setViewResult","prediciton","setPrediction","showSubmitError","setShowSubmitError","formData","setFormData","skinConditions","handleInputChange","event","name","value","target","handleCheckboxChange","checked","updatedSkinConditions","push","filter","condition","handleSubmit","isTextFieldsFilled","Object","entires","key","every","trim","isSkinConditionSelected","length","getPrediction","payload","console","log","res","fetch","awsTestUrl","method","then","response","json","catch","error","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","thickness","onClick","colorScheme","_c","$RefreshReg$"],"sources":["/Users/alexong/workspace/school/sdmay24-48/frontend/src/App.js"],"sourcesContent":["import \"./styles/App.css\";\nimport Header from \"./components/Header\";\nimport { ChakraProvider, Button, Spinner } from \"@chakra-ui/react\";\nimport InputFields from \"./components/InputFields\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [viewResult, setViewResult] = useState(false);\n  const [prediciton, setPrediction] = useState(\"\");\n  const [showSubmitError, setShowSubmitError] = useState(false);\n\n  // Form Data State\n  const [formData, setFormData] = useState({\n    skinConditions: []\n  });\n\n  // Callback function to pass into InputFields for Text Box changes\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  // Callback function to pass into InputFields for Checkboxes\n  const handleCheckboxChange = (event) => {\n    const { value, checked } = event.target;\n    let updatedSkinConditions = [...formData.skinConditions];\n    if (checked) {\n      updatedSkinConditions.push(value);\n    } else {\n      updatedSkinConditions = updatedSkinConditions.filter(condition => condition !== value);\n    }\n    setFormData({\n      ...formData,\n      skinConditions: updatedSkinConditions,\n    });\n  };\n\n  const handleSubmit = () => {\n    // Check if all text fields are filled out\n    const isTextFieldsFilled = Object.entires(formData).filter((value, key) => key !== 'skinConditions').every(value => typeof value === 'string' && value.trim() !== '');\n    // const t1 =  Object.entries(formData).filter((value, key) => key !== 'skinConditions')\n    // console.log(t1)\n    // const t2 = t1.every(value => typeof value === 'string' && value.trim() !== '');\n\n    // console.log(t1, t2)\n\n    // Check if at least one skin condition is selected\n    const isSkinConditionSelected = formData.skinConditions.length > 0;\n    \n    // if (isTextFieldsFilled && isSkinConditionSelected) {\n    //   // Form is valid, proceed with submission\n    //   console.log('Form submitted:', formData);\n    //   return true\n    // }\n    //   // Form is invalid, show error message\n    //   console.log('Please fill out all text fields and select at least one skin condition.');\n    //   return false\n  };\n\n\n  const getPrediction = async () => {\n    const payload = {\n      ...formData\n    };\n\n    console.log('payload ', payload)\n\n    if(!handleSubmit()){\n      setShowSubmitError(true)\n      return;\n    }\n\n    console.log('payload ', payload)\n    \n    setIsLoading(true);\n\n    const res = await fetch(awsTestUrl, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .catch((error) => console.error(error));\n\n    setIsLoading(false);\n\n    console.log(res);\n    if (res) {\n      setViewResult(true);\n      setPrediction(res.body);\n    }\n  };\n\n  return (\n    <div className=\"h-screen mx-auto\">\n      <Header />\n\n      <main className=\"min-h-fit flex flex-col items-center justify-center \">\n        {isLoading && (\n          <div className=\"mt-60\">\n            <Spinner size=\"xl\" thickness=\"4px\" />\n          </div>\n        )}\n\n        {!isLoading && !viewResult && (\n          <>\n         \n            <div className=\"w-full flex flex-col items-center\">\n              <InputFields handleInputChange={handleInputChange} showSubmitError={showSubmitError} handleCheckboxChange={handleCheckboxChange}/>\n            </div>\n            <div className=\"mt-6\">\n              <Button onClick={getPrediction} colorScheme=\"red\">\n                View Prediction\n              </Button>\n            </div>\n          </>\n        )}\n\n        {!isLoading && viewResult && (\n          <div className=\"flex flex-col items-center\">\n            <h1 className=\"text-3xl font-semibold text-black\">Prediction:</h1>\n            <p>{prediciton}</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\nconst awsTestUrl =\n  \"https://lryw2w5i7nr5ysubsumkcn4ssu0fprbu.lambda-url.us-east-1.on.aws/\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}